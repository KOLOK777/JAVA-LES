Index: main/java/DZ2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class DZ2 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/DZ2.java b/main/java/DZ2.java
--- a/main/java/DZ2.java	(revision e66523cdd303d0e08c1b5666c5595931cfbbf688)
+++ b/main/java/DZ2.java	(date 1687310598338)
@@ -1,2 +1,23 @@
+//Формат сдачи: ссылка на подписанный git-проект.
+//
+//        Задание
+//
+//        Дана строка sql-запроса "select * from students where ". Сформируйте часть WHERE этого запроса, используя StringBuilder. Данные для фильтрации приведены ниже в виде json-строки.
+//        Если значение null, то параметр не должен попадать в запрос.
+//        Параметры для фильтрации: {"name":"Ivanov", "country":"Russia", "city":"Moscow", "age":"null"}
+//
+//        Дополнительные задания
+//
+//        Дана json-строка (можно сохранить в файл и читать из файла)
+//        [{"фамилия":"Иванов","оценка":"5","предмет":"Математика"},{"фамилия":"Петрова","оценка":"4","предмет":"Информатика"},{"фамилия":"Краснов","оценка":"5","предмет":"Физика"}]
+//        Написать метод(ы), который распарсит json и, используя StringBuilder, создаст строки вида: Студент [фамилия] получил [оценка] по предмету [предмет].
+//        Пример вывода:
+//        Студент Иванов получил 5 по предмету Математика.
+//        Студент Петрова получил 4 по предмету Информатика.
+//        Студент Краснов получил 5 по предмету Физика.
+//
+//        *Сравнить время выполнения замены символа "а" на "А" любой строки содержащей >1000 символов средствами String и StringBuilder.
+//        *Дана строка: ".3 + 1.56 = " подсчитать результат и добавить к строке.
+
 public class DZ2 {
 }
Index: main/java/DZ3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class DZ3 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/DZ3.java b/main/java/DZ3.java
--- a/main/java/DZ3.java	(revision e66523cdd303d0e08c1b5666c5595931cfbbf688)
+++ b/main/java/DZ3.java	(date 1687310817605)
@@ -1,2 +1,9 @@
+//Пусть дан произвольный список из 100 целых чисел.
+//
+//        1) Нужно удалить из него чётные числа
+//        2) Найти минимальное значение
+//        3) Найти максимальное значение
+//        4) Найти среднее значение
+
 public class DZ3 {
 }
Index: main/java/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/.idea/modules.xml b/main/java/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1686943548561)
+++ b/main/java/.idea/modules.xml	(date 1686943548561)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/main.iml" filepath="$PROJECT_DIR$/main.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: main/java/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/.idea/.gitignore b/main/java/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1687310229072)
+++ b/main/java/.idea/.gitignore	(date 1687310229072)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: main/java/Seminar3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Seminar3 {\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/Seminar3.java b/main/java/Seminar3.java
--- a/main/java/Seminar3.java	(revision e66523cdd303d0e08c1b5666c5595931cfbbf688)
+++ b/main/java/Seminar3.java	(date 1687357700543)
@@ -1,4 +1,95 @@
-public class Seminar3 {
-
-
-}
+//import java.util.*;
+//
+//public class Seminar3 {
+//
+//    public static void main(String[] args) {
+//
+////        Object o = new Object();
+//
+//        ArrayList<Integer> list = new ArrayList<>();
+//        ArrayList<Integer> list2 = new ArrayList<>();
+//
+//        for (int i = 0; i < 10; i++) {
+//            list.add(new Random().nextInt(15));
+//            list2.add(new Random().nextInt(15));
+//        }
+//
+////        list.add(1);            //Integer
+////        list.add(.24f);         //Float
+////        list.add("РџСЂРёРІРµС‚!");    //String
+////        list.add(true);         //Boolean
+////
+////        if (list.get(2) instanceof String) {
+////            String s = (String) list.get(2);
+////        }
+//
+////        list.add(12);
+////        list.add(1, 12);
+////        list.addAll(list2);
+////        list.addAll(2, list2);
+////        list.set(2, 12);
+////
+////        list.size();
+////        if (list.contains(12));
+////        list.remove(12);
+////        Integer in = 12;
+////        list.remove(in);
+////        list.clear();
+////        ArrayList<Integer> integers = (ArrayList<Integer>) list.subList(1, list.size()/2);
+////        list.trimToSize();
+////        list.ensureCapacity(100);
+////        list.indexOf(12);
+////        list.lastIndexOf(12);
+//
+//        System.out.println(list);
+//        System.out.println(list2);
+//        System.out.println("-".repeat(16));
+//
+////        list.retainAll(list2);
+////        list.removeAll(list2);
+//
+//        list.sort(new Comparator<Integer>() {
+//            @Override
+//            public int compare(Integer o1, Integer o2) {
+//                if (o1%3!=0) return 0;
+//                if (o2%2==0) return 1;
+//                return -1;
+//            }
+//        });
+//
+//        System.out.println(list);
+//
+////        for (int i = 0; i < list.size(); i++) {
+////            System.out.println(list.get(i));
+////        }
+////
+////        for (int i: list) {
+////            System.out.println(i);
+////        }
+////
+////        Iterator<Integer> iterator = list.iterator();
+////        while (iterator.hasNext()){
+////            int i = iterator.next();
+////            iterator.remove();
+////        }
+////
+////        ListIterator<Integer> iterator2 = list.listIterator(list.size()-1);
+////        while (iterator2.hasPrevious()){
+////            int i = iterator2.previous();
+////            iterator2.remove();
+////            iterator2.nextIndex();
+////        }
+//
+////        list2.clear();
+////        list.forEach(n -> list2.add(0, n));
+//
+//        LinkedList<Integer> integers = new LinkedList<>();
+//        integers.add(12);
+//        integers.add(0, 12);
+//
+//
+//
+//
+//    }
+//
+//}
\ No newline at end of file
Index: main/java/DZ5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class DZ5 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/DZ5.java b/main/java/DZ5.java
--- a/main/java/DZ5.java	(revision e66523cdd303d0e08c1b5666c5595931cfbbf688)
+++ b/main/java/DZ5.java	(date 1687311294224)
@@ -1,2 +1,7 @@
+//Реализуйте структуру телефонной книги с помощью HashMap.
+//Программа также должна учитывать, что во входной структуре будут повторяющиеся имена с разными телефонами,
+//        их необходимо считать, как одного человека с разными телефонами. Вывод должен быть отсортирован по убыванию
+//        числа телефонов.
+
 public class DZ5 {
 }
Index: main/java/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/.idea/vcs.xml b/main/java/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1686943548670)
+++ b/main/java/.idea/vcs.xml	(date 1686943548670)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/../../../.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: main/java/Seminar4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/Seminar4.java b/main/java/Seminar4.java
new file mode 100644
--- /dev/null	(date 1687357722887)
+++ b/main/java/Seminar4.java	(date 1687357722887)
@@ -0,0 +1,1 @@
+//
Index: main/java/Seminar1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Seminar1 {\r\n}\r\n\r\nimport java.util.Random;\r\n        import java.util.Scanner;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n\r\n        int i = 't';\r\n        float f = .543f;\r\n        long l;\r\n        double d;\r\n        short sh;\r\n        byte b;\r\n        char ch = 'g';\r\n        boolean b1 = false;\r\n\r\n        //---------------------------------\r\n\r\n        int[] ints = new int[12];\r\n        Random random = new Random();\r\n        for (int j = 0; j < ints.length; j++) ints[j] = random.nextInt(2000);\r\n\r\n        int[] tmp = new int[ints.length + 3];\r\n        System.arraycopy(ints, 0, tmp, 0, ints.length);\r\n        ints = tmp;\r\n\r\n        i = 0;\r\n        for (int j = 0, tm = 12; j < 12; j++, tm -= 23, i += j) ;\r\n        System.out.println(i);\r\n\r\n        if (b1) System.out.println(b1);\r\n\r\n        String str = \"РџСЂРёРІРµС‚ РњРёСЂ!\";\r\n        str += \"?\";\r\n\r\n        System.out.println(str.substring(1, str.length() - 1));\r\n        System.out.println(\"HI!\".toLowerCase().repeat(3).length());\r\n\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        String s;\r\n        do {\r\n            s = scanner.nextLine();\r\n            System.out.println(s);\r\n        } while (!s.equals(\"q\"));\r\n\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/Seminar1.java b/main/java/Seminar1.java
--- a/main/java/Seminar1.java	(revision e66523cdd303d0e08c1b5666c5595931cfbbf688)
+++ b/main/java/Seminar1.java	(date 1687356806547)
@@ -1,53 +1,104 @@
-public class Seminar1 {
-}
-
-import java.util.Random;
-        import java.util.Scanner;
-
-public class Main {
-
-    public static void main(String[] args) {
-
-        int i = 't';
-        float f = .543f;
-        long l;
-        double d;
-        short sh;
-        byte b;
-        char ch = 'g';
-        boolean b1 = false;
-
-        //---------------------------------
-
-        int[] ints = new int[12];
-        Random random = new Random();
-        for (int j = 0; j < ints.length; j++) ints[j] = random.nextInt(2000);
-
-        int[] tmp = new int[ints.length + 3];
-        System.arraycopy(ints, 0, tmp, 0, ints.length);
-        ints = tmp;
-
-        i = 0;
-        for (int j = 0, tm = 12; j < 12; j++, tm -= 23, i += j) ;
-        System.out.println(i);
-
-        if (b1) System.out.println(b1);
-
-        String str = "РџСЂРёРІРµС‚ РњРёСЂ!";
-        str += "?";
-
-        System.out.println(str.substring(1, str.length() - 1));
-        System.out.println("HI!".toLowerCase().repeat(3).length());
-
-        Scanner scanner = new Scanner(System.in);
-
-        String s;
-        do {
-            s = scanner.nextLine();
-            System.out.println(s);
-        } while (!s.equals("q"));
-
-
-    }
-
-}
+//public class Seminar1 {
+//}
+//
+//import java.util.Random;
+//        import java.util.Scanner;
+//
+//public class Main {
+//
+//    public static void main(String[] args) {
+//
+//        int i = 't';
+//        float f = .543f;
+//        long l;
+//        double d;
+//        short sh;
+//        byte b;
+//        char ch = 'g';
+//        boolean b1 = false;
+//
+//        //---------------------------------
+//
+//        int[] ints = new int[12];
+//        Random random = new Random();
+//        for (int j = 0; j < ints.length; j++) ints[j] = random.nextInt(2000);
+//
+//        int[] tmp = new int[ints.length + 3];
+//        System.arraycopy(ints, 0, tmp, 0, ints.length);
+//        ints = tmp;
+//
+//        i = 0;
+//        for (int j = 0, tm = 12; j < 12; j++, tm -= 23, i += j) ;
+//        System.out.println(i);
+//
+//        if (b1) System.out.println(b1);
+//
+//        String str = "РџСЂРёРІРµС‚ РњРёСЂ!";
+//        str += "?";
+//
+//        System.out.println(str.substring(1, str.length() - 1));
+//        System.out.println("HI!".toLowerCase().repeat(3).length());
+//
+//        Scanner scanner = new Scanner(System.in);
+//
+//        String s;
+//        do {
+//            s = scanner.nextLine();
+//            System.out.println(s);
+//        } while (!s.equals("q"));
+//
+//
+//    }
+//
+//}
+//
+//import java.util.Random;
+//        import java.util.Scanner;
+//
+//public class Main {
+//
+//    public static void main(String[] args) {
+//
+//        int i = 't';
+//        float f = .543f;
+//        long l;
+//        double d;
+//        short sh;
+//        byte b;
+//        char ch = 'g';
+//        boolean b1 = false;
+//
+//        //---------------------------------
+//
+//        int[] ints = new int[12];
+//        Random random = new Random();
+//        for (int j = 0; j < ints.length; j++) ints[j] = random.nextInt(2000);
+//
+//        int[] tmp = new int[ints.length + 3];
+//        System.arraycopy(ints, 0, tmp, 0, ints.length);
+//        ints = tmp;
+//
+//        i = 0;
+//        for (int j = 0, tm = 12; j < 12; j++, tm -= 23, i += j) ;
+//        System.out.println(i);
+//
+//        if (b1) System.out.println(b1);
+//
+//        String str = "РџСЂРёРІРµС‚ РњРёСЂ!";
+//        str += "?";
+//
+//        System.out.println(str.substring(1, str.length() - 1));
+//        System.out.println("HI!".toLowerCase().repeat(3).length());
+//
+//        Scanner scanner = new Scanner(System.in);
+//
+//        String s;
+//        do {
+//            s = scanner.nextLine();
+//            System.out.println(s);
+//        } while (!s.equals("q"));
+//
+//
+//    }
+//
+//}
\ No newline at end of file
Index: main/java/DZ4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class DZ4 {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/DZ4.java b/main/java/DZ4.java
--- a/main/java/DZ4.java	(revision e66523cdd303d0e08c1b5666c5595931cfbbf688)
+++ b/main/java/DZ4.java	(date 1687356729453)
@@ -1,2 +1,11 @@
-public class DZ4 {
-}
+//Организовать ввод и хранение данных пользователей. ФИО возраст и пол
+//        вывод в формате Фамилия И.О. возраст пол
+//        добавить возможность выхода или вывода списка отсортированного по возрасту!)
+//        *реализовать сортировку по возрасту с использованием индексов
+//        *реализовать сортировку по возрасту и полу с использованием индексов
+//public class DZ4 {
+//    public static void main(String[] args) {
+//        String str = "!Hello World! ";
+//        String str1 = "Hello! ";
+//        System.out.println(str+str1);
+//    }
Index: main/java/Seminar2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Seminar2 {\r\n}\r\n\r\nimport java.util.Random;\r\n\r\npublic class Serminar2 {\r\n\r\n    public static void main(String[] args) {\r\n        String str = \"!Hello World! \";\r\n        String str1 = \"Hello! \";\r\n        str1 = str;\r\n//        Integer.numberOfLeadingZeros(7654);\r\n//        Integer.numberOfTrailingZeros(12);\r\n\r\n        str.getBytes();\r\n        System.out.println(str.toLowerCase());\r\n        System.out.println(str.toUpperCase());\r\n        if (str.isEmpty());\r\n        if (str.length()==0);\r\n\r\n        System.out.println(str.charAt(str.length()/2));\r\n        System.out.println(str.indexOf(\"!\"));\r\n        System.out.println(str.indexOf(\"!\", str.indexOf(\"!\")+1));\r\n        System.out.println(str.lastIndexOf(\"!\"));\r\n        System.out.println(str.lastIndexOf(\"!\", str.lastIndexOf(\"!\")-1));\r\n        System.out.println(str.endsWith(\"! \"));\r\n\r\n        System.out.println(str.equals(\"!\"));\r\n        System.out.println(str.contains(\"!\"));\r\n\r\n        System.out.println(\"-\".repeat(32));\r\n        System.out.println(str.repeat(4).replace(\"!\", \"?\"));\r\n        System.out.println(str.repeat(4).replace(\"!\", \"\"));\r\n        System.out.println(str.repeat(4).replaceFirst(\"!\", \"<?>\"));\r\n\r\n        System.out.println(str.substring(str.length()/2));\r\n        System.out.println(str.substring(str.length()/2, str.length()-1));\r\n\r\n        str.concat(\"!\");\r\n\r\n        String[] tmp = str.repeat(4).split(\" \");\r\n\r\n        System.out.println(str);\r\n\r\n        StringBuilder builder = new StringBuilder(\"Hello World!\");\r\n        builder = new StringBuilder(32);\r\n        builder = new StringBuilder();\r\n        builder = new StringBuilder(str);\r\n\r\n        builder\r\n                .append(.43123f)    //РґСЂРѕР±РЅРѕРµ!\r\n                .append(true)\r\n                .append(\"!\");\r\n\r\n        builder.deleteCharAt(builder.length()/2);\r\n        builder.delete(0, builder.length()/2-1);\r\n        builder.insert(0, \"РџСЂРёРІРµС‚ \");\r\n        builder.replace(2, 4, \"!!!\");\r\n        builder.reverse();\r\n\r\n        builder.charAt(builder.length()/2);\r\n        builder.indexOf(\"!\");\r\n        builder.indexOf(\"!\", builder.indexOf(\"!\")+1);\r\n        builder.lastIndexOf(\"!\");\r\n        builder.lastIndexOf(\"!\", builder.lastIndexOf(\"!\")-1);\r\n\r\n        str = builder.toString();\r\n        str = new StringBuilder(str).reverse().toString();\r\n\r\n        System.out.println(builder);\r\n\r\n        String s = \"\";\r\n        StringBuilder builder1 = new StringBuilder(\"\");\r\n\r\n        long start = System.currentTimeMillis();\r\n        for (int i = 0; i < 100; i++) {\r\n            s += Character.getName(i);\r\n        }\r\n        System.out.println(\"String time = \" + (System.currentTimeMillis() - start));\r\n\r\n        start = System.currentTimeMillis();\r\n        for (int i = 0; i < 100; i++) {\r\n            builder1.append(Character.getName(i));\r\n        }\r\n        System.out.println(\"StringBuilder time = \" + (System.currentTimeMillis() - start));\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/Seminar2.java b/main/java/Seminar2.java
--- a/main/java/Seminar2.java	(revision e66523cdd303d0e08c1b5666c5595931cfbbf688)
+++ b/main/java/Seminar2.java	(date 1687357700523)
@@ -1,89 +1,175 @@
-public class Seminar2 {
-}
-
-import java.util.Random;
-
-public class Serminar2 {
-
-    public static void main(String[] args) {
-        String str = "!Hello World! ";
-        String str1 = "Hello! ";
-        str1 = str;
-//        Integer.numberOfLeadingZeros(7654);
-//        Integer.numberOfTrailingZeros(12);
-
-        str.getBytes();
-        System.out.println(str.toLowerCase());
-        System.out.println(str.toUpperCase());
-        if (str.isEmpty());
-        if (str.length()==0);
-
-        System.out.println(str.charAt(str.length()/2));
-        System.out.println(str.indexOf("!"));
-        System.out.println(str.indexOf("!", str.indexOf("!")+1));
-        System.out.println(str.lastIndexOf("!"));
-        System.out.println(str.lastIndexOf("!", str.lastIndexOf("!")-1));
-        System.out.println(str.endsWith("! "));
-
-        System.out.println(str.equals("!"));
-        System.out.println(str.contains("!"));
-
-        System.out.println("-".repeat(32));
-        System.out.println(str.repeat(4).replace("!", "?"));
-        System.out.println(str.repeat(4).replace("!", ""));
-        System.out.println(str.repeat(4).replaceFirst("!", "<?>"));
-
-        System.out.println(str.substring(str.length()/2));
-        System.out.println(str.substring(str.length()/2, str.length()-1));
-
-        str.concat("!");
-
-        String[] tmp = str.repeat(4).split(" ");
-
-        System.out.println(str);
-
-        StringBuilder builder = new StringBuilder("Hello World!");
-        builder = new StringBuilder(32);
-        builder = new StringBuilder();
-        builder = new StringBuilder(str);
-
-        builder
-                .append(.43123f)    //РґСЂРѕР±РЅРѕРµ!
-                .append(true)
-                .append("!");
-
-        builder.deleteCharAt(builder.length()/2);
-        builder.delete(0, builder.length()/2-1);
-        builder.insert(0, "РџСЂРёРІРµС‚ ");
-        builder.replace(2, 4, "!!!");
-        builder.reverse();
-
-        builder.charAt(builder.length()/2);
-        builder.indexOf("!");
-        builder.indexOf("!", builder.indexOf("!")+1);
-        builder.lastIndexOf("!");
-        builder.lastIndexOf("!", builder.lastIndexOf("!")-1);
-
-        str = builder.toString();
-        str = new StringBuilder(str).reverse().toString();
-
-        System.out.println(builder);
-
-        String s = "";
-        StringBuilder builder1 = new StringBuilder("");
-
-        long start = System.currentTimeMillis();
-        for (int i = 0; i < 100; i++) {
-            s += Character.getName(i);
-        }
-        System.out.println("String time = " + (System.currentTimeMillis() - start));
-
-        start = System.currentTimeMillis();
-        for (int i = 0; i < 100; i++) {
-            builder1.append(Character.getName(i));
-        }
-        System.out.println("StringBuilder time = " + (System.currentTimeMillis() - start));
-
-    }
-
-}
+//public class Seminar2 {
+//}
+//
+//import java.util.Random;
+//
+//public class Serminar2 {
+//
+//    public static void main(String[] args) {
+//        String str = "!Hello World! ";
+//        String str1 = "Hello! ";
+//        str1 = str;
+////        Integer.numberOfLeadingZeros(7654);
+////        Integer.numberOfTrailingZeros(12);
+//
+//        str.getBytes();
+//        System.out.println(str.toLowerCase());
+//        System.out.println(str.toUpperCase());
+//        if (str.isEmpty());
+//        if (str.length()==0);
+//
+//        System.out.println(str.charAt(str.length()/2));
+//        System.out.println(str.indexOf(" "));
+//        System.out.println(str.indexOf("!", str.indexOf("!")+1));
+//        System.out.println(str.lastIndexOf("!"));
+//        System.out.println(str.lastIndexOf("!", str.lastIndexOf("!")-1));
+//        System.out.println(str.endsWith("! "));
+//
+//        System.out.println(str.equals("!"));
+//        System.out.println(str.contains("!"));
+//
+//        System.out.println("-".repeat(32));
+//        System.out.println(str.repeat(4).replace("!", "?"));
+//        System.out.println(str.repeat(4).replace("!", ""));
+//        System.out.println(str.repeat(4).replaceFirst("!", "<?>"));
+//
+//        System.out.println(str.substring(str.length()/2));
+//        System.out.println(str.substring(str.length()/2, str.length()-1));
+//
+//        str.concat("!");
+//
+//        String[] tmp = str.repeat(4).split(" ");
+//
+//        System.out.println(str);
+//
+//        StringBuilder builder = new StringBuilder("Hello World!");
+//        builder = new StringBuilder(32);
+//        builder = new StringBuilder();
+//        builder = new StringBuilder(str);
+//
+//        builder
+//                .append(.43123f)    //РґСЂРѕР±РЅРѕРµ!
+//                .append(true)
+//                .append("!");
+//
+//        builder.deleteCharAt(builder.length()/2);
+//        builder.delete(0, builder.length()/2-1);
+//        builder.insert(0, "РџСЂРёРІРµС‚ ");
+//        builder.replace(2, 4, "!!!");
+//        builder.reverse();
+//
+//        builder.charAt(builder.length()/2);
+//        builder.indexOf("!");
+//        builder.indexOf("!", builder.indexOf("!")+1);
+//        builder.lastIndexOf("!");
+//        builder.lastIndexOf("!", builder.lastIndexOf("!")-1);
+//
+//        str = builder.toString();
+//        str = new StringBuilder(str).reverse().toString();
+//
+//        System.out.println(builder);
+//
+//        String s = "";
+//        StringBuilder builder1 = new StringBuilder("");
+//
+//        long start = System.currentTimeMillis();
+//        for (int i = 0; i < 100; i++) {
+//            s += Character.getName(i);
+//        }
+//        System.out.println("String time = " + (System.currentTimeMillis() - start));
+//
+//        start = System.currentTimeMillis();
+//        for (int i = 0; i < 100; i++) {
+//            builder1.append(Character.getName(i));
+//        }
+//        System.out.println("StringBuilder time = " + (System.currentTimeMillis() - start));
+//
+//    }
+//
+//}
+//import java.util.Random;
+//
+//public class Serminar2 {
+//
+//    public static void main(String[] args) {
+//        String str = "!Hello World! ";
+//        String str1 = "Hello! ";
+//        str1 = str;
+////        Integer.numberOfLeadingZeros(7654);
+////        Integer.numberOfTrailingZeros(12);
+//
+//        str.getBytes();
+//        System.out.println(str.toLowerCase());
+//        System.out.println(str.toUpperCase());
+//        if (str.isEmpty());
+//        if (str.length()==0);
+//
+//        System.out.println(str.charAt(str.length()/2));
+//        System.out.println(str.indexOf("!"));
+//        System.out.println(str.indexOf("!", str.indexOf("!")+1));
+//        System.out.println(str.lastIndexOf("!"));
+//        System.out.println(str.lastIndexOf("!", str.lastIndexOf("!")-1));
+//        System.out.println(str.endsWith("! "));
+//
+//        System.out.println(str.equals("!"));
+//        System.out.println(str.contains("!"));
+//
+//        System.out.println("-".repeat(32));
+//        System.out.println(str.repeat(4).replace("!", "?"));
+//        System.out.println(str.repeat(4).replace("!", ""));
+//        System.out.println(str.repeat(4).replaceFirst("!", "<?>"));
+//
+//        System.out.println(str.substring(str.length()/2));
+//        System.out.println(str.substring(str.length()/2, str.length()-1));
+//
+//        str.concat("!");
+//
+//        String[] tmp = str.repeat(4).split(" ");
+//
+//        System.out.println(str);
+//
+//        StringBuilder builder = new StringBuilder("Hello World!");
+//        builder = new StringBuilder(32);
+//        builder = new StringBuilder();
+//        builder = new StringBuilder(str);
+//
+//        builder
+//                .append(.43123f)    //РґСЂРѕР±РЅРѕРµ!
+//                .append(true)
+//                .append("!");
+//
+//        builder.deleteCharAt(builder.length()/2);
+//        builder.delete(0, builder.length()/2-1);
+//        builder.insert(0, "РџСЂРёРІРµС‚ ");
+//        builder.replace(2, 4, "!!!");
+//        builder.reverse();
+//
+//        builder.charAt(builder.length()/2);
+//        builder.indexOf("!");
+//        builder.indexOf("!", builder.indexOf("!")+1);
+//        builder.lastIndexOf("!");
+//        builder.lastIndexOf("!", builder.lastIndexOf("!")-1);
+//
+//        str = builder.toString();
+//        str = new StringBuilder(str).reverse().toString();
+//
+//        System.out.println(builder);
+//
+//        String s = "";
+//        StringBuilder builder1 = new StringBuilder("");
+//
+//        long start = System.currentTimeMillis();
+//        for (int i = 0; i < 100; i++) {
+//            s += Character.getName(i);
+//        }
+//        System.out.println("String time = " + (System.currentTimeMillis() - start));
+//
+//        start = System.currentTimeMillis();
+//        for (int i = 0; i < 100; i++) {
+//            builder1.append(Character.getName(i));
+//        }
+//        System.out.println("StringBuilder time = " + (System.currentTimeMillis() - start));
+//
+//    }
+//
+//}
\ No newline at end of file
Index: main/java/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/java/.idea/misc.xml b/main/java/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1686943548623)
+++ b/main/java/.idea/misc.xml	(date 1686943548623)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" default="true" project-jdk-name="20" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
